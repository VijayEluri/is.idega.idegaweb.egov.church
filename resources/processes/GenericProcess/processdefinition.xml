<?xml version="1.0" encoding="UTF-8"?>

<!-- TODO: it's easier to just copy now some impra process, than to adjust this one to new changes
This might not work correctly now 
-->

<process-definition
  xmlns=""  name="GenericProcess">
  
  <event type="process-start">
         <script>
            <expression>
                String handlerRoleName = "bpm_genericProcess_handler";
                String ownerRoleName = "bpm_genericProcess_owner";
                String caseHandlerRoleName = "bpm_genericProcess_caseHandler";
                String invitedRoleName = "bpm_genericProcess_invited";
                
                mainProcessInstanceId = executionContext.getProcessInstance().getId();
                    
            </expression>
            <variable name='mainProcessInstanceId' access='write' />
            <variable name='handlerRoleName' access='write' />
            <variable name='ownerRoleName' access='write' />
            <variable name='caseHandlerRoleName' access='write' />
            <variable name='invitedRoleName' access='write' />
         </script>
  </event>
  <event type="process-start">
    <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>rolesAssignmentHandler</handlerName>
                    <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                        <entry>
                            <key>assignmentExpression</key>
                            <value>
                               ${
                               String handlerRoleName = resolver.get("handlerRoleName");
                               String handlerNativeRoleName = handlerRoleName;
                               
                               return
                               "{rolesAssignment: {roles: {role: ["+
                               "     {roleName: \""+handlerRoleName+"\", identities: {identity: [{identityType: ROLE, identityId: \""+handlerNativeRoleName+"\"}]}}"+
                               " ]} }}";
                               }
                            </value>
                    </entry>
                </propertyMap>
        </action>
  </event>
  
  <event type="process-start">
        <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
            <handlerName>rightsManagementRolesAssignmentHandler</handlerName>
                <propertyMap key-type='java.lang.String' value-type='java.lang.String'>
                    <entry>
                        <key>assignmentExpression</key>
                        <value>
                            {rightsAssignment: {roles: {role: [
                                {roleName: "bpm_genericProcess_handler", accesses: {access: [modifyPermissions, caseHandler]}},
                                {roleName: "bpm_genericProcess_handler", accesses: {access: [seeContacts]}, rolesContacts: {string: ["all"]}},
                                {roleName: "bpm_genericProcess_owner", accesses: {access: [seeContacts]}, rolesContacts: {string: ["bpm_genericProcess_caseHandler"]}}
                            ]} }}
                        </value>
                </entry>
            </propertyMap>
        </action>
    </event>
  
   <start-state name="submitNewCase">
      <task name="Submit New Case">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>jsonAssignmentHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
					<entry><key>expression</key>
						<value>
				             {taskAssignment: {roles: {role: [
				                   {roleName: "bpm_genericProcess_handler", accesses: {access: [read]}},
				                   {roleName: "bpm_genericProcess_owner", accesses: {access: [read, write]}, assignIdentities: {string: ["current_user"]}},
				                   {roleName: "bpm_genericProcess_invited", accesses: {access: [read]}}
		               		 ]} }}
			            </value>
					</entry>
			</propertyMap>
		 </assignment>
         <controller>
            <variable name="string_ownerKennitala" 						access="write,required"></variable>
            <variable name="string_ownerEmailAddress" 					access="write"></variable>
            <variable name="string_ownerAddress" 						access="write,required"></variable>
            <variable name="string_ownerPostCode" 						access="write,required"></variable>
            <variable name="string_ownerMunicipality" 					access="write"></variable>
            <variable name="string_ownerPhone" 							access="write,required"></variable>
			<variable name="string_ownerFullName"						access="write,required"></variable>
			<variable name="string_ownerAverageNumberOfEmployees"		access="write"></variable>
			<variable name="string_ownerContactPerson"					access="write,required"></variable>
			<variable name="string_caseDescription"						access="write,required"></variable>
			<variable name="string_ownerAppliedProjectDescription"		access="write"></variable>
			<variable name="string_ownerResult"							access="write"></variable>
			<variable name="string_ownerApplicantBackground"			access="write"></variable>
			<variable name="string_ownerPotentialDevelopment"			access="write"></variable>
			<variable name="string_ownerProjectPresentStatus"			access="write"></variable>
			<variable name="string_ownerBusinessConceptDetail"			access="write"></variable>
			<variable name="string_ownerCompetitions"					access="write"></variable>
			<variable name="objlist_ownerCostsAndMainTasks"				access="write"></variable>
			<variable name="objlist_ownerFinanceOfTasks"				access="write"></variable>
			<variable name="list_ownerInformationAboutProgram"			access="write"></variable>
			<variable name="string_ownerMobile"							access="write"></variable>
			<variable name="string_ownerFax"							access="write"></variable>
			<variable name="string_ownerBusinessConcept"				access="write,required"></variable>
			<variable name="string_ownerCustomInformationAboutProgram"	access="write"></variable>
			<variable name="files_ownerAttachments"						access="write"></variable>
			<variable name="string_caseIdentifier"						access="write"></variable>
			<variable name="string_ownerOther"							access="write"></variable>
			<variable name="string_ownerTotalCost"						access="write"></variable>
			<variable name="string_ownerGrantAmount"               	    access="write"></variable>
			<variable  name="string_ownerGender"						access="write,required"></variable>
			
			
         </controller>
      </task>
      <transition to="fork3"></transition>
		<event type="node-leave">
		  <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
                <handlerName>setProcessDescriptionHandler</handlerName>
          </action>
		</event>
   </start-state>
   <node name="sendHandlerNewCaseArrivedMessage">
      <event type="node-enter">
         <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>sendCaseMessagesHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
			        <entry>
			        	<key>inlineSubject</key>
			        	<value>
			        		${
			        		Map subjectMap = new HashMap();
			        		subjectMap.put("en", "New case has been created");
			        		subjectMap.put("is_IS", "N\u00FDtt m\u00E1l stofna\u00F0");
			        		return subjectMap;
			        		}
			        		
                		</value>
                	</entry>
                	<entry>
			        	<key>inlineMessage</key>
			        	<value>
			        		${
			        		Map messageMap = new HashMap();
			        		messageMap.put("en", "Hello, {0}. New {1} case with identifier {2} and description {3} has been created.");
			        		messageMap.put("is_IS", "S\u00E6l/ll, {0}. N\u00FDtt m\u00E1l \u00ED flokknum {1} me\u00F0 nafni\u00F0 {3} og m\u00E1lsn\u00FAmeri\u00F0 {2} hefur veri\u00F0 stofna\u00F0.");
			        		return messageMap;
			        		}
                		</value>
                	</entry>
                	<entry>
			        	<key>messageValues</key>
			        	<value>
			        		{list: {mv: [{type: "bean", value: "user.name"}, {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}]}}
                		</value>
                	</entry>
                	<entry><key>sendToRoles</key><value>bpm_genericProcess_handler</value></entry>
			    </propertyMap>
		 </action>
        
      </event>
   	  <transition to="fork1"></transition>
   </node>
   <task-node name="requestAdditionalInformation">
      <task name="Request Additional Information" priority="-1">
          <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>jsonAssignmentHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
					<entry><key>expression</key>
						<value>
				            {taskAssignment: {roles: {role: [
		                    	{roleName: "bpm_genericProcess_handler", accesses: {access: [read, write]}}
		                	]} }}
			            </value>
					</entry>
			</propertyMap>
		 </assignment>
         <!--  
         <assignment class="com.idega.jbpm.identity.JSONAssignmentHandler">
            <expression>
                {taskAssignment: {roles: {role: [
                   {roleName: "bpm_genericProcess_handler", accesses: {access: [read, write]}},
                   {roleName: "bpm_genericProcess_owner", accesses: {access: [read, write]}} 
                ]} }}
            </expression>
         </assignment>
         -->
         <controller>
            <variable name="string_additionalInformationRequestText" access="write,required"></variable>
            <variable name="files_additionalAttachments"></variable>
         </controller>
      </task>
		<transition to="sendMessage"></transition>
   </task-node>
   <task-node name="submitAdditionalInformation">
      <task name="Submit Additional Information">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>jsonAssignmentHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
					<entry><key>expression</key>
						<value>
				            {taskAssignment: {roles: {role: [
			                   {roleName: "bpm_genericProcess_handler", accesses: {access: [read]}},
			                   {roleName: "bpm_genericProcess_owner", accesses: {access: [read, write]}} 
		               		]} }}
			            </value>
				</entry>
			</propertyMap>
		 </assignment>
         <controller>
            <variable name="string_additionalInformationRequestText" access="read"></variable>
            <variable name="string_additionalInformation" access="write,required"></variable>
            <variable name="files_additionalAttachments"></variable>
         </controller>
      </task>
      <transition to="additionalInformationEnd"></transition>
   </task-node>
   <end-state name="additionalInformationEnd"></end-state>
   <task-node name="submitCaseAnswer" priority="-1">
      <task name="Submit invited case answer">
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
			<handlerName>jsonAssignmentHandler</handlerName>
			<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
				<entry><key>expression</key>
					<value>
			             {taskAssignment: {roles: {role: [
	                  	 	{roleName: "bpm_genericProcess_handler", accesses: {access: [read]}},
	                   		{roleName: "bpm_genericProcess_invited", accesses: {access: [read, write]}}
	               		 ]} }}
		            </value>
				</entry>
			</propertyMap>
		 </assignment>
         <controller>
            <variable name="string_ownerCaseInformation" access="read"></variable>
            <variable name="string_participantCaseAnswer" access="write,required"></variable>
            <variable name="files_participantAttachments"></variable>
         </controller>
      </task>
      <transition to="caseAnswerEnd"></transition>
   </task-node>
   <end-state name="caseAnswerEnd"></end-state>
   <task-node name="submitProcessRuling">
      <task name="Submit Process Ruling">
         <controller>
            <variable name="string_rulingText" access="write,required"></variable>
         </controller>
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
			<handlerName>jsonAssignmentHandler</handlerName>
			<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
				<entry><key>expression</key>
					<value>
			             {taskAssignment: {roles: {role: [
	                   		{roleName: "bpm_genericProcess_handler", accesses: {access: [read, write]}}
	               		 ]} }}
		            </value>
				</entry>
			</propertyMap>
		 </assignment>
      </task>
		<transition to="denyProcessRulling" name="toDenyProcessRulling"></transition>
		<transition to="grantProcessRulling" name="toGrantProcessRulling"></transition>
   </task-node>
   <node name="sendRulingMessages">
      <event type="node-enter">
         <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>sendCaseMessagesHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
			        <entry>
			        	<key>inlineSubject</key>
			        	<value>
			        		${
			        		Map subjectMap = new HashMap();
			        		subjectMap.put("en", "Process ruling has been submitted");
			        		subjectMap.put("is_IS", "Ni\u00F0ursta\u00F0a \u00ED erindi til k\u00E6runefndar");
			        		return subjectMap;
			        		}
			        		
                		</value>
                	</entry>
                	<entry>
			        	<key>inlineMessage</key>
			        	<value>
			        		${
			        		Map messageMap = new HashMap();
			        		messageMap.put("en", "Hello, {0}. Process ruling has been submitted for the case {1} and it is now viewable in your case list with identifier {2} and description {3}.");
			        		messageMap.put("is_IS", "S\u00E6l/ll, {0}. Afgrei\u00F0sla ums\u00F3knar \u00FEinnar me\u00F0 nafni\u00F0 \"{3}\" og m\u00E1lsn\u00FAmeri\u00F0 \"{2}\" er n\u00FA loki\u00F0 og \u00FE\u00FA getur sko\u00F0a\u00F0 ni\u00F0urst\u00F6\u00F0u hennar \u00ED m\u00E1lalistanum \u00FE\u00EDnum \u00E1 Impru e\u00F0a \u00E1 sl\u00F3\u00F0inni {1}.");
			        		return messageMap;
			        		}
                		</value>
                	</entry>
                	<entry>
			        	<key>messageValues</key>
			        	<value>
			        		{list: {mv: [{type: "bean", value: "user.name"},  {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}]}}
                		</value>
                	</entry>
                	<entry><key>sendToRoles</key><value>bpm_genericProcess_owner</value></entry>
			    </propertyMap>
		 </action>
      </event>
		<transition to="completeProcess"></transition>
   </node>
   <end-state name="end">
   
   </end-state>

	<end-state name="emailsFetcherEnd"></end-state>

	<event type="handlerAssignedToCase">
        <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>caseHandlerAssignmentHandler</handlerName>
				
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
				<entry><key>caseHandlerRoleExp</key><value>{role: {roleName: "bpm_genericProcess_caseHandler"}}</value></entry>
			        <entry>
			        	<key>inlineSubject</key>
			        	<value>
			        		${
			        		Map subjectMap = new HashMap();
			        		subjectMap.put("en", "Handler was assigned to the case");
			        		subjectMap.put("is_IS", "M\u00E1li\u00F0 \u00FEitt hefur fengi\u00F0 umsj\u00F3narmann");
			        		return subjectMap;
			        		}
			        		
                		</value>
                	</entry>
                	<entry>
			        	<key>inlineMessage</key>
			        	<value>
			        		${
			        		Map messageMap = new HashMap();
			        		messageMap.put("en", "Hi, {0}.\n Handler {1} was assigned to the case {2} with identifier {3} and description {4}");
			        		messageMap.put("is_IS", "S\u00E6l/ll, {0}.\n {1} hefur teki\u00F0 a\u00F0 s\u00E9r m\u00E1l \u00ED flokknum \"{2}\" me\u00F0 nafni\u00F0 \"{4}\" og m\u00E1lsn\u00FAmeri\u00F0 \"{3}\"");
			        		return messageMap;
			        		}
                		</value>
                	</entry>
                	<entry>
			        	<key>messageValues</key>
			        	<value>
			        		{list: {mv: [{type: "bean", value: "user.name"}, {type: "roleUsers", value: "{role: {roleName: \"bpm_genericProcess_caseHandler\"}}"},  {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}]}}
                		</value>
                	</entry>
                	<entry><key>sendToRoles</key><value>bpm_genericProcess_owner bpm_genericProcess_handler</value></entry>
			    </propertyMap>
		 </action>
    </event>
    <event type="handlerUnassignedFromCase">
        <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>caseHandlerAssignmentHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
			      	<entry><key>caseHandlerRoleExp</key><value>{role: {roleName: "bpm_genericProcess_caseHandler"}}</value></entry>
			        <entry>
			        	<key>inlineSubject</key>
			        	<value>
			        		${
			        		Map subjectMap = new HashMap();
			        		subjectMap.put("en", "Handler was unassigned from the case");
			        		subjectMap.put("is_IS", "Umsj\u00F3narmannaskipti");
			        		return subjectMap;
			        		}
			        		
                		</value>
                	</entry>
                	<entry>
			        	<key>inlineMessage</key>
			        	<value>
			        		${
			        		Map messageMap = new HashMap();
			        		messageMap.put("en", "Hi, {0}.\n Handler was unassigned from the case {1} with identifier {2} and description {3}");
			        		messageMap.put("is_IS", "S\u00E6l/ll, {0}.\n Umsj\u00F3narmannaskipti hafa \u00E1tt s\u00E9r sta\u00F0 fyrir m\u00E1l \u00ED flokknum \"{1}\" me\u00F0 nafni\u00F0 \"{3}\" og m\u00E1lsn\u00FAmeri\u00F0 \"{2}\". N\u00FDr umsj\u00F3narma\u00F0ur tekur vi\u00F0.");
			        		return messageMap;
			        		}
                		</value>
                	</entry>
                	<entry>
			        	<key>messageValues</key>
			        	<value>
			        		{list: {mv: [{type: "bean", value: "user.name"}, {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}]}}
                		</value>
                	</entry>
                	<entry><key>sendToRoles</key><value>bpm_genericProcess_handler</value></entry>
			    </propertyMap>
		</action>
    </event>
    <event type="postStartActivity">
        <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
			<handlerName>casesStatusHandler</handlerName>
			<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
			   	   	<entry><key>caseStatusMappedName</key><value>caseStatusInProgress</value></entry>
			  	<entry><key>ifCaseStatusMappedName</key><value>caseStatusOpened</value></entry>
			  	<entry><key>processInstanceId</key><value>#{mainProcessInstanceId}</value></entry>
		
			</propertyMap>
		</action>
    </event>
   <fork name="fork1">
      <transition name="toRequestAdditionalInformation" to="requestAdditionalInformation"></transition>
      <transition name="toInviteParticipant" to="inviteDefandant"></transition>
      <transition name="toSubmitProcessRuling" to="submitProcessRuling"></transition>
   </fork>
   <task-node name="inviteDefandant">
      <task name="Invite participant">
         <controller>
            <variable name="string_inviteText" access="write,required"></variable>
            <variable name="string_participantEmail" access="write,required"></variable>
		    <variable name="string_participantName" access="write,required"></variable>
				<variable access="write" name="files_inviteParticipantAttachments"></variable>
         </controller>
         <assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
			<handlerName>jsonAssignmentHandler</handlerName>
			<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
				<entry><key>expression</key>
					<value>
		                {taskAssignment: {roles: {role: [
		                   {roleName: "bpm_genericProcess_handler", accesses: {access: [read, write]}},
		                   {roleName: "bpm_genericProcess_invited", accesses: {access: [read]}}
		                ]} }}
		            </value>
				</entry>
			</propertyMap>
		 </assignment>
      </task>
		<transition to="inviteParticipant"></transition>
   </task-node>
   <node name="endCaseProcess">
      <event type="node-leave">
          <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
                <handlerName>endCaseProcessHandler</handlerName>
          </action>
      </event>
      <transition to="endProcess"></transition>
   </node>
   <node name="endProcess">
      <event type="node-leave">
         <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
                <handlerName>endProcessHandler</handlerName>
          </action>
      </event>
      <transition to="end"></transition>
   </node>
   <process-state name="inviteParticipant">
      <sub-process name="participantInvitation" binding="late" />
      
      <variable name="participantInviteProcessInstanceId" access="read" mapped-name="sendFromProcessInstanceId" />
      <variable name="participantInviteUserPersonalData" access="read" mapped-name="participantUserData" />
      <variable name="participantInviteRoleExp" access="read" mapped-name="participantRoleExpression" />
      <variable name="participantInviteMsg" access="read" mapped-name="participantInvitationMessage" />
      
      <transition to="submitCaseAnswer"></transition>
      <event type="node-enter">
         <script>
            <expression>
                s_processInstanceId = token.getProcessInstance().getId();
                
                s_upd = new com.idega.jbpm.identity.UserPersonalData();
                s_upd.setUserEmail(userEmail);
                s_upd.setFullName(userFullName);
                s_upd.setUserType("BPM_USER_LEGAL");
                
                s_roleExp = "{role: {roleName: \"bpm_genericProcess_invited\"}}";
                
                s_msg = new com.idega.bpm.process.invitation.Message();
                s_msg.setText(msgText);
            </expression>
            <variable name='string_participantEmail' access='read' mapped-name='userEmail' />
            <variable name='string_participantName' access='read' mapped-name='userFullName' />
            <variable name='string_inviteText' access='read' mapped-name='msgText' />
            <variable name='participantInviteProcessInstanceId' access='write' mapped-name='s_processInstanceId' />
            <variable name='participantInviteUserPersonalData' access='write' mapped-name='s_upd' />
            <variable name='participantInviteRoleExp' access='write' mapped-name='s_roleExp' />
            <variable name='participantInviteMsg' access='write' mapped-name='s_msg' />
         </script>
      </event>
   </process-state>
   <process-state name="emailsFetcher">
      <sub-process name="fetchEmails" binding="late" />
      <variable name="string_emailReadAssignmentExpression" access="read" mapped-name="string_emailReadAssignmentExpression" />
      <event type="node-enter">
         <script>
            <expression>
                emailReadAssignmentExpression = 
	                   "{taskAssignment: {rolesFromProcessInstanceId: "+executionContext.getProcessInstance().getId()
	                   +", roles: {role: ["
	                   +"{roleName: \"bpm_genericProcess_handler\", accesses: {access: [read]}}"
	                   +"]} }}";
            </expression>
            <variable name='string_emailReadAssignmentExpression' access='write' mapped-name='emailReadAssignmentExpression' />
         </script>
      </event>
		<transition to="emailsFetcherEnd"></transition>
   
   </process-state>
   <fork name="fork3">
		<transition name="toEmailsFetcher" to="emailsFetcher"></transition>
      <transition to="handlerAssignsOwner" name="toHandlerAssignsOwner"></transition>
   </fork>
   <node name="sendMessage">
      <event type="node-enter">
         <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>sendCaseMessagesHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
			      	
			        <entry>
			        	<key>inlineSubject</key>
			        	<value>
			        		${
			        		Map subjectMap = new HashMap();
			        		subjectMap.put("en", "Additional information needed");
			        		subjectMap.put("is_IS", "Meiri uppl\u00FDsingar er \u00FE\u00F6rf.");
			        		return subjectMap;
			        		}
			        		
                		</value>
                	</entry>
                	<entry>
			        	<key>inlineMessage</key>
			        	<value>
			        		${
			        		Map messageMap = new HashMap();
			        		messageMap.put("en", "Hello, {0}. There is a new form for you to supply additional information in the case {1} with identifier {2} and description {3}.");
			        		messageMap.put("is_IS", "S\u00E6l/ll, {0}. Frekari uppl\u00FDsinga um ums\u00F3knina \u00FE\u00EDna er \u00FE\u00F6rf. Skr\u00E1\u00F0u \u00FEig inn \u00E1 Impru \u00FEar b\u00ED\u00F0ur \u00FE\u00EDn form til a\u00F0 fylla \u00FAt undir \"A\u00F0ger\u00F0ir\" \u00ED m\u00E1lsyfirlitinu.");
			        		return messageMap;
			        		}
                		</value>
                	</entry>
                	<entry>
			        	<key>messageValues</key>
			        	<value>
			        		{list: {mv: [{type: "bean", value: "user.name"},  {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}]}}
                		</value>
                	</entry>
                	<entry><key>sendToRoles</key><value>bpm_genericProcess_owner</value></entry>
			    </propertyMap>
		</action>
      </event>
      <transition to="submitAdditionalInformation"></transition>
   </node>

	<task-node name="completeProcess">
		<task name="Complete process">
			<assignment class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>jsonAssignmentHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
					<entry><key>expression</key>
						<value>
			                {taskAssignment: {roles: {role: [
			                    {roleName: "bpm_genericProcess_handler", accesses: {access: [read, write]}},
			                    {roleName: "bpm_genericProcess_owner", accesses: {access: [read]}},
			                    {roleName: "bpm_genericProcess_invited", accesses: {access: [read]}}
		                    ]} }}
			            </value>
					</entry>
				</propertyMap>
			</assignment>
			<controller>
				<variable access="write" name="string_processEndFinalSummary"></variable>
				<variable access="write" name="files_processEndAttachments"></variable>
			</controller>
		</task>
		<transition to="endCaseProcess"></transition>
	</task-node>

	<process-state name="handlerAssignsOwner">
	  <sub-process name="AssignmentAssist" binding="late" />
      
      <variable name="assignmentAssistantRoleExp" access="read" mapped-name="assistantRoleExpression" />
      <variable name="assignmentAssigneeRoleExp" access="read" mapped-name="assigneeRoleExpression" />
      <variable name="myProcessInstanceId" access="read" mapped-name="assignFromProcessInstanceId" />
      <variable name="ownerUserPersonalData" access="read" mapped-name="assigneeData" />
      
      <event type="node-enter">
         <script>
            <expression>
                s_processInstanceId = token.getProcessInstance().getId();
                
                s_upd = new com.idega.jbpm.identity.UserPersonalData();
                s_upd.setUserEmail(userEmailAddress);
                s_upd.setFullName(userFullName);
                s_upd.setPersonalId(userPersonalId);
                s_upd.setUserType("BPM_USER_NATURAL");
                s_upd.setUserAddress(userAddress);
                s_upd.setUserPostalCode(userPostalCode);
                s_upd.setUserMunicipality(userMunicipality);
                s_upd.setUserPhone(userPhone);
                s_upd.setHideInContacts(true);
                s_upd.setGenderName(userGenderName);
                
                s_roleExp = "{role: {roleName: \"bpm_genericProcess_handler\"}}";
                s_assigneeRoleExp = "{role: {roleName: \"bpm_genericProcess_owner\"}}";
            </expression>
            <variable name='myProcessInstanceId' access='write' mapped-name='s_processInstanceId' />
            <variable name='ownerUserPersonalData' access='write' mapped-name='s_upd' />
            <variable name='assignmentAssistantRoleExp' access='write' mapped-name='s_roleExp' />
            <variable name='assignmentAssigneeRoleExp' access='write' mapped-name='s_assigneeRoleExp' />
            
            <variable name='string_ownerKennitala' access='read' mapped-name='userPersonalId' />
            <variable name='string_ownerAddress' access='read' mapped-name='userAddress' />
            <variable name='string_ownerPostCode' access='read' mapped-name='userPostalCode' />
            <variable name='string_ownerMunicipality' access='read' mapped-name='userMunicipality' />
            <variable name='string_ownerPhone' access='read' mapped-name='userPhone' />
            <variable name='string_ownerFullName' access='read' mapped-name='userFullName' />
            <variable name='string_ownerEmailAddress' access='read' mapped-name='userEmailAddress' />
            <variable name='string_ownerGender' access='read' mapped-name='userGenderName' />
            
            
         </script>
      </event>
		<transition to="ifHandlerAssigned"></transition>
	</process-state>

	<process-state name="anonymousOwnerAssignment">
		<sub-process name="AnonAssignment" binding="late" />
      
      <variable name="assignmentAssigneeRoleExp" access="read" mapped-name="assigneeRoleExpression" />
      <variable name="myProcessInstanceId" access="read" mapped-name="assignFromProcessInstanceId" />
      <variable name="ownerUserPersonalData" access="read" mapped-name="assigneeData" />
      
      <event type="node-enter">
         <script>
         <!-- TODO: this exp should be global -->
            <expression>
                s_processInstanceId = token.getProcessInstance().getId();
                
                s_upd = new com.idega.jbpm.identity.UserPersonalData();
                s_upd.setUserEmail(userEmailAddress);
                s_upd.setFullName(userFullName);
                s_upd.setPersonalId(userPersonalId);
                s_upd.setUserType("BPM_USER_NATURAL");
                s_upd.setUserAddress(userAddress);
                s_upd.setUserPostalCode(userPostalCode);
                s_upd.setUserMunicipality(userMunicipality);
                s_upd.setUserPhone(userPhone);
                s_upd.setGenderName(userGenderName);
                
                s_assigneeRoleExp = "{role: {roleName: \"bpm_genericProcess_owner\"}}";
            </expression>
            <variable name='myProcessInstanceId' access='write' mapped-name='s_processInstanceId' />
            <variable name='ownerUserPersonalData' access='write' mapped-name='s_upd' />
            <variable name='assignmentAssigneeRoleExp' access='write' mapped-name='s_assigneeRoleExp' />
            
            <variable name='string_ownerKennitala' access='read' mapped-name='userPersonalId' />
            <variable name='string_ownerAddress' access='read' mapped-name='userAddress' />
            <variable name='string_ownerPostCode' access='read' mapped-name='userPostalCode' />
            <variable name='string_ownerMunicipality' access='read' mapped-name='userMunicipality' />
            <variable name='string_ownerPhone' access='read' mapped-name='userPhone' />
            <variable name='string_ownerFullName' access='read' mapped-name='userFullName' />
            <variable name='string_ownerEmailAddress' access='read' mapped-name='userEmailAddress' />
            <variable name='string_ownerGender' access='read' mapped-name='userGenderName' />
            
         </script>
      </event>
		<transition to="sendOwnerCaseCreatedMessage" name=""></transition>
	</process-state>

	<decision name="ifHandlerAssigned" expression="#{handlerAssignedOwner != null &amp;&amp; handlerAssignedOwner}">
		<transition to="anonymousOwnerAssignment" name="false"></transition>
		<transition to="sendHandlerNewCaseArrivedMessage" name="true"></transition>
	</decision>

	<node name="sendOwnerCaseCreatedMessage">
		<event type="node-enter">
		  <action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>sendCaseMessagesHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
			        <entry>
			        	<key>inlineSubject</key>
			        	<value>
			        		${
			        		Map subjectMap = new HashMap();
			        		subjectMap.put("en", "Case created successfully!");
			        		subjectMap.put("is_IS", "\u00DEakka \u00FE\u00E9r fyrir, n\u00FDtt m\u00E1l hefur veri\u00F0 stofna\u00F0 og ver\u00F0ur afgreitt eins flj\u00F3tt og au\u00F0i\u00F0 er.");
			        		return subjectMap;
			        		}
			        		
                		</value>
                	</entry>
                	<entry>
			        	<key>inlineMessage</key>
			        	<value>
			        		${
			        		Map messageMap = new HashMap();
			        		messageMap.put("en", "Hello, {0}. You have successfully created case {1} with identifier {2} and description {3}. We are hopeful that your case will be handled soon. Good luck!");
			        		messageMap.put("is_IS", "S\u00E6l/ll, {0}. \u00DE\u00FA hefur n\u00FA send inn ums\u00F3kn \u00ED flokknum {1} me\u00F0 m\u00E1lsn\u00FAmeri\u00F0 \"{2}\" og nafni\u00F0 \"{3}\" . M\u00E1l \u00FEitt ver\u00F0ur afgreitt eins flj\u00F3tt og au\u00F0i\u00F0 er.");
			        		return messageMap;
			        		}
                		</value>
                	</entry>
                	<entry>
			        	<key>messageValues</key>
			        	<value>
			        		{list: {mv: [{type: "bean", value: "user.name"}, {type: "bean", value: "piw.processDefinitionW.startTaskName"}, {type: "bean", value: "piw.processIdentifier"}, {type: "bean", value: "piw.processDescription"}, {type: "bean", value: "caseUser.urlToTheCase"}]}}
                		</value>
                	</entry>
                	<entry><key>sendToRoles</key><value>bpm_genericProcess_owner</value></entry>
			    </propertyMap>
		 </action>
		</event>
		<transition to="sendHandlerNewCaseArrivedMessage" name=""></transition>
	</node>

	<node name="denyProcessRulling">
		<event type="node-enter">
		<action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
			<handlerName>casesStatusHandler</handlerName>
			<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
				<entry><key>caseStatusMappedName</key><value>caseStatusDenied</value></entry>
                <entry><key>processInstanceId</key><value>#{mainProcessInstanceId}</value></entry>			</propertyMap>
		</action>
		</event>
		<transition to="sendRulingMessages"></transition>
	</node>

	<node name="grantProcessRulling">
		<event type="node-enter">
			<action class="com.idega.jbpm.proxy.JbpmHandlerProxy"> 
				<handlerName>casesStatusHandler</handlerName>
				<propertyMap key-type='java.lang.String' value-type='java.lang.String'>
					<entry><key>caseStatusMappedName</key><value>caseStatusGranted</value></entry>
                    <entry><key>processInstanceId</key><value>#{mainProcessInstanceId}</value></entry>
				</propertyMap>
			</action>
        </event>
		<transition to="sendRulingMessages"></transition>
	</node>
	
	<idg:roles xmlns:idg="http://idega.com/bpm">
        <role name="bpm_genericProcess_caseHandler">
          <labels>
            <label lang="en">caseHandler</label>
            <label lang="is_IS">Umsjónarmaður</label>
          </labels>
        </role>
        <role name="bpm_genericProcess_handler" createNative="true">
          <labels>
            <label lang="en">handler</label>
            <label lang="is_IS">Umsjónarhópur</label>
          </labels>
        </role>
        <role name="bpm_genericProcess_invited">
          <labels>
            <label lang="en">invited</label>
            <label lang="is_IS">Þátttakendur</label>
          </labels>
        </role>
        <role name="bpm_genericProcess_owner">
          <labels>
            <label lang="en">owner</label>
            <label lang="is_IS">Sendandi</label>
          </labels>
        </role>
        <role name="bpm_genericProcess_manager">
          <labels>
            <label lang="en">manager</label>
            <label lang="is_IS">Verkefnastjóri</label>
          </labels>
        </role>
    </idg:roles>
</process-definition>